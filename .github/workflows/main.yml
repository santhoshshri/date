name: Remote Backup Workflow

on:
  push:
    branches:
      - main

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE }}
        
      - name: Add SSH keyscan
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
         
      - name: Set up date variables
        id: date
        run: |
          echo "BACKUP_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "BACKUP_DIR=test-$BACKUP_DATE" >> $GITHUB_ENV
          echo "OLD_BACKUP_DATE=$(date -d 'yesterday' +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "OLD_BACKUP_DIR=test-$OLD_BACKUP_DATE" >> $GITHUB_ENV

      - name: Perform backup and cleanup on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            BACKUP_DATE=$(date +'%Y-%m-%d')
            BACKUP_DIR="test-$BACKUP_DATE"
            OLD_BACKUP_DATE=$(date -d 'yesterday' +'%Y-%m-%d')
            OLD_BACKUP_DIR="test-$OLD_BACKUP_DATE"
            
            # Create the backup directory
            mkdir -p /opt/testing/backup/$BACKUP_DIR
            
            # Perform the backup
            rsync -av /var/www/test/ /opt/testing/backup/$BACKUP_DIR/
            
            # Remove previous day's backup if it exists
            if [ -d "/opt/testing/backup/$OLD_BACKUP_DIR" ]; then
              rm -rf /opt/testing/backup/$OLD_BACKUP_DIR
            fi
  
          EOF
